import pygame


class PongPaddle(pygame.sprite.Sprite):
    def __init__(self, xy, keys, size, color, screen):
        super().__init__()
        self.shape = pygame.Surface(size)
        self.shape.fill(color)
        self.size = size
        self.rect = self.shape.get_rect()
        self.rect.x = xy[0]
        self.rect.y = xy[1]
        self.controls = keys
        self.key_pressed = pygame.key.get_pressed()
        self.screen_size = screen

    def move(self):
        self.key_pressed = pygame.key.get_pressed()
        if self.key_pressed[self.controls[0]]:
            self.rect.y -= 10
            if self.rect.y < 0:
                self.rect.y = 0
        if self.key_pressed[self.controls[1]]:
            self.rect.y += 10
            if self.rect.y > (self.screen_size[1] - self.size[1]):
                self.rect.y = self.screen_size[1] - self.size[1]

    def draw(self, main_screen):
        main_screen.blit(self.shape, [self.rect.x, self.rect.y])


class Ball(pygame.sprite.Sprite):
    def __init__(self, xy, size, color, screen):
        super().__init__()
        import random
        self.shape = pygame.Surface(size)
        self.shape.fill(color)
        self.size = size
        self.rect = self.shape.get_rect()
        self.rect.x = xy[0]
        self.rect.y = xy[1]
        self.screen_size = screen
        self.xdir = 4 * random.choice([-1, 1])
        self.ydir = 4 * random.choice([-1, 1])

    def move(self, otherSprite, move=1, bounce=1):
        if move == 1:
            self.rect.x += self.xdir * move
        if (self.rect.x + self.size[0]) >= self.screen_size[0] or self.rect.x <= 0 or pygame.sprite.collide_rect(self, otherSprite):
            if bounce == 1:
                self.xdir *= -1
                self.rect.x += self.xdir * 2
        if move == 1:
            self.rect.y += self.ydir
        if (self.rect.y + self.size[1]) >= self.screen_size[1] or self.rect.y <= 0 or pygame.sprite.collide_rect(self, otherSprite):
            if bounce == 1:
                self.ydir *= -1

    def draw(self, main_screen):
        main_screen.blit(self.shape, [self.rect.x, self.rect.y])

import pygame
import sys

# Set up info
SIZE = [1000, 800]
pygame.init()
screen = pygame.display.set_mode(SIZE)

# Create game objects
yeet = PongPaddle([925, 250], [273, 274], [50, 125], [255, 255, 255], SIZE)
blind = PongPaddle([75, 250], [119, 115], [50, 125], [255, 255, 255], SIZE)

# Set FPS
FPS = 31
clock = pygame.time.Clock()
ball = pg.Ball([500, 400], [15, 15], [255, 255, 255], SIZE)
# Main Loop
while True:
    # Keys and update data
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
    yeet.move()
    blind.move()
    ball.move(yeet)
    ball.move(blind)

    # Fill screen
    screen.fill([0, 0, 0])

    # Draw sprites
    yeet.draw(screen)
    blind.draw(screen)
    ball.draw(screen)

    # Update screen
    pygame.display.update()

    # FPS
    clock.tick(FPS)
